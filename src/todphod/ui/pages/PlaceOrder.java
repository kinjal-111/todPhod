
package todphod.ui.pages;

import ca.odell.glazedlists.GlazedLists;
import ca.odell.glazedlists.swing.AutoCompleteSupport;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import todphod.core.Customer;
import todphod.core.Order;
import todphod.core.OrderProducts;
import todphod.core.Product;
import todphod.ui.UIUtils;
import todphod.ui.components.ItemList;
import todphod.ui.components.ProductOrderPanel;
import todphod.utilities.TOClient;


public class PlaceOrder extends javax.swing.JPanel {
    private int selectedCustomer;
    private ItemList productsList;
    private List<ProductOrderPanel> products;
    private Map<String, Integer> customers;
    
    /**
     * Creates new form AddCustomer
     */
    public PlaceOrder() {
        initComponents();
        this.setSize(1090, 750);
        
        System.out.println("new Order().getAllOrders() = " + new Order().getAllOrders());
        
        this.products = new ArrayList<>();
        
        this.productsList = new ItemList(ProductOrderPanel.WIDTH);
        this.getAllCustomers();
        
        pnlAddProducts.add(productsList, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 260, ProductOrderPanel.WIDTH, 250));
        
        UIUtils.setIcon(this.jbPlaceOrder, "save");
        UIUtils.setIcon(this.jbAdd, "add");
        
        
        
    }
    
    private void getAllCustomers() {
        Customer cusomter = new Customer();
        Map<Integer, Customer> customerMap = cusomter.getAllCustomers();
        System.out.println("customerMap = " + customerMap);
        this.customers = new HashMap<>();
        
        String customers[] = new String[customerMap.keySet().size()];
        int index = 0;
        
        for(Map.Entry<Integer, Customer> customerEntry : customerMap.entrySet()) { 
            String name = customerEntry.getValue().getCustomerName();
            int id = customerEntry.getKey();
            System.out.println("id = " + id);
            System.out.println("name = " + name);
            this.customers.put(name, id);
            customers[index++] = name;
        }
        
        AutoCompleteSupport.install(this.jcbCustomers, GlazedLists.eventListOf(customers));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jbPlaceOrder = new javax.swing.JLabel();
        jbAdd = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbCustomers = new org.uikit.KeyValueJComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jspAddPorducts = new javax.swing.JScrollPane();
        pnlAddProducts = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Raleway", 0, 32)); // NOI18N
        jLabel1.setText("Place a Order");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 36, -1, -1));

        jbPlaceOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jbPlaceOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendor/images/buttons/save.png"))); // NOI18N
        jbPlaceOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbPlaceOrderMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbPlaceOrderMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbPlaceOrderMousePressed(evt);
            }
        });
        add(jbPlaceOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 690, 157, 48));

        jbAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jbAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendor/images/buttons/add.png"))); // NOI18N
        jbAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jbAddMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jbAddMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jbAddMousePressed(evt);
            }
        });
        add(jbAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 690, 157, 48));

        jLabel4.setFont(new java.awt.Font("Raleway", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(149, 160, 182));
        jLabel4.setText("Select the Customer : ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 350, -1));

        jcbCustomers.setFont(new java.awt.Font("Raleway", 0, 18)); // NOI18N
        jcbCustomers.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCustomersItemStateChanged(evt);
            }
        });
        add(jcbCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 350, -1));

        jLabel5.setFont(new java.awt.Font("Raleway", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 198, 255));
        jLabel5.setText("Product : ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 225, 350, -1));

        jLabel6.setFont(new java.awt.Font("Raleway", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 198, 255));
        jLabel6.setText("Quantity : ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 225, 110, -1));

        jLabel7.setFont(new java.awt.Font("Raleway", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 198, 255));
        jLabel7.setText("Total Price ; ");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(782, 225, -1, -1));

        jspAddPorducts.setBackground(new java.awt.Color(255, 255, 255));
        jspAddPorducts.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jspAddPorducts.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlAddProducts.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlAddProductsLayout = new javax.swing.GroupLayout(pnlAddProducts);
        pnlAddProducts.setLayout(pnlAddProductsLayout);
        pnlAddProductsLayout.setHorizontalGroup(
            pnlAddProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1047, Short.MAX_VALUE)
        );
        pnlAddProductsLayout.setVerticalGroup(
            pnlAddProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );

        jspAddPorducts.setViewportView(pnlAddProducts);

        add(jspAddPorducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 1070, 420));
    }// </editor-fold>//GEN-END:initComponents

    public String getJcbCustomerName(){
        return jcbCustomers.getSelectedItem().toString();
    }
    
    private void jbPlaceOrderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbPlaceOrderMousePressed
        Order order = new Order();
        
        int customerId = this.selectedCustomer;
        ArrayList<Integer> productsList = new ArrayList<>();
        ArrayList<Integer> quantityList = new ArrayList<>();
        for(ProductOrderPanel productOrderPanel : this.products) {
            int productId = productOrderPanel.getProductId();
            int quantity = productOrderPanel.getQuantity();
            if(productId == -1) {
                JOptionPane.showMessageDialog(this, "Please select a product for all the items");
                return;
            } else if(quantity == 0) {
                JOptionPane.showMessageDialog(this, "Please specify the quantity for all the products");
            }
            productsList.add(productId);
            quantityList.add(quantity);
        }
    
        if(customerId == -1) {
            JOptionPane.showMessageDialog(this, "Please Select a customer");
            return;
        }
        
        ArrayList<String> values = new ArrayList<>();
        // Customer ID
        values.add(customerId + "");
        // State of the order
        values.add(1 + "");
        // Date of Order
        values.add(new SimpleDateFormat("yyyy-MM-dd").format(new Date()));
        
        int id = order.insert(values);
        if(id != -1) {
            OrderProducts orderProducts = new OrderProducts();
            for(int i=0;i<productsList.size();i++) {
                values = new ArrayList<>();
                
                // Order ID
                values.add(id + "");
                // Product ID
                values.add(productsList.get(i) + "");
                // Quantity 
                values.add(quantityList.get(i) + "");
                
                int orderProductId = orderProducts.insert(values);
                if(orderProductId == -1) {
                    return;
                }
            }
            JOptionPane.showMessageDialog(this, "Order Placed successfully");
            TOClient.sendSMS(new Customer().getCustomerByID(this.selectedCustomer).getCustomerPhone(), "Your order has been placed sucessfully at Tod Phod.");
        }
        
        //new BillGeneration();
    }//GEN-LAST:event_jbPlaceOrderMousePressed

    private void jbAddMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAddMousePressed
        ProductOrderPanel productOrderPanel = new ProductOrderPanel();
        //jspAddPorducts.add(productOrderPanel);
        this.productsList.add(productOrderPanel);
        this.productsList.addItem(productOrderPanel);
    }//GEN-LAST:event_jbAddMousePressed

    private void jcbCustomersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCustomersItemStateChanged
        int index = this.jcbCustomers.getSelectedIndex();
        if(index == -1) {
            this.selectedCustomer = -1;
            return;
        }
        String customerName = this.jcbCustomers.getSelectedItem().toString();
        this.selectedCustomer = this.customers.get(customerName);
    }//GEN-LAST:event_jcbCustomersItemStateChanged

    private void jbAddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAddMouseEntered
        // TODO add your handling code here:
        jbAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendor/images/buttons/add_hover.png")));
    }//GEN-LAST:event_jbAddMouseEntered

    private void jbAddMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAddMouseExited
        // TODO add your handling code here:
        jbAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendor/images/buttons/add.png")));
    }//GEN-LAST:event_jbAddMouseExited

    private void jbPlaceOrderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbPlaceOrderMouseEntered
        // TODO add your handling code here:
        jbPlaceOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendor/images/buttons/save_hover.png")));
    }//GEN-LAST:event_jbPlaceOrderMouseEntered

    private void jbPlaceOrderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbPlaceOrderMouseExited
        // TODO add your handling code here:
        jbPlaceOrder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendor/images/buttons/save.png")));
    }//GEN-LAST:event_jbPlaceOrderMouseExited

    public JComboBox getJcbCustomers(){
        return jcbCustomers;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jbAdd;
    private javax.swing.JLabel jbPlaceOrder;
    private org.uikit.KeyValueJComboBox jcbCustomers;
    private javax.swing.JScrollPane jspAddPorducts;
    private javax.swing.JPanel pnlAddProducts;
    // End of variables declaration//GEN-END:variables
}
